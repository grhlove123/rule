作为一名快十年的码农，我总结了一下，绝大多数系统实际最终都可以归结为内容管理系统，开发步骤无非就是：

1. 搭框架(SSH、SSM..)
2. 写业务代码(对许多表的增、删、改、查),JMS,RPC...
3. 前后端接口联调

这里实际大量是重复工作，只有业务逻辑是不一样的，于是我就想为什么不能把这些重复的工作都抽出来，
开发只用写业务函数，对于增、删、改、查这些操作，框架把它们抽象为共同函数，以函数为单位，可以
扩展自己的业务函数，函数里可以实现你想要的任何逻辑，权限验证、CURD、JMS、RPC等等，通过JAVA的SPI机制动态加载
扩展函数，一组函数组合在一块就成了策略(脚本)，策略定义采用可读性强的JSON格式

最终简化为：
1. 写扩展函数 (共同函数在不断完善中，以后需要写的扩展函数越来越少)
2. 配置策略(JSON)
3. 前后端联调，只要传策略ID，还有别的业务参数，其他由框架完成
   由于模块化配置，出错率低，大大加快联调速度

我暂时把这框架叫规则引擎....